{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "grid-particles-example",
  "type": "registry:component",
  "registryDependencies": [
    "grid-particles"
  ],
  "files": [
    {
      "path": "src/registry/default/example/grid-particles-example.tsx",
      "content": "\"use client\";\nimport { Application } from \"@pixi/react\";\nimport { useTheme } from \"next-themes\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { GridParticles } from \"@/registry/default/ui/grid-particles\";\n\nexport default function GridParticlesExample() {\n  const ref = useRef<HTMLDivElement>(null);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  const { theme } = useTheme();\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        const { width, height } = entry.contentRect;\n        setDimensions({ width, height });\n      }\n    });\n\n    resizeObserver.observe(ref.current);\n\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, []);\n\n  return (\n    <div ref={ref} className={\"h-[600px] w-full\"}>\n      <Application\n        autoStart\n        sharedTicker\n        resizeTo={ref}\n        preference=\"webgpu\"\n        backgroundAlpha={0}\n        width={dimensions.width}\n        height={dimensions.height}\n        onInit={(app) => {\n          app.canvas.style.pointerEvents = \"auto\";\n          app.canvas.style.touchAction = \"auto\";\n        }}\n      >\n        <GridParticles\n          mode=\"random\"\n          color={theme === \"dark\" ? 0xd2ff65 : 0x5d7522}\n        />\n      </Application>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}